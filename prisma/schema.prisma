// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String
  email     String   @unique
  role      Role     @default(USER)
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("users")
}

model Shelve {
  id            String    @id @default(uuid())
  location      String
  capacity      Int
  currentLoad   Int
  accessibility Boolean
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @default(now()) @updatedAt @map("updated_at")
  packages      Package[]

  @@map("shelves")
}

model Robot {
  id             String   @id @default(uuid())
  name           String
  status         String
  battery        Int
  location       String
  lastMaintained String   @map("last_maintained")
  tasks          Task[]

  @@map("robots")
}

model Package {
  id        String   @id @default(uuid())
  qrCode    String   @unique @map("qr_code")
  size      Int
  weight    Int
  location  String
  status    String
  shelfId   String?  @map("shelf_id")
  shelf     Shelve?  @relation(fields: [shelfId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
  tasks     Task[]

  @@map("packages")
}

model Task {
  id          String    @id @default(uuid())
  packageId   String    @map("package_id")
  package     Package   @relation(fields: [packageId], references: [id])
  robotId     String    @map("robot_id")
  robot       Robot     @relation(fields: [robotId], references: [id])
  status      String
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @default(now()) @updatedAt @map("updated_at")
  completedAt DateTime? @map("completed_at")

  @@map("tasks")
}

enum Role {
  USER
  ADMIN
}